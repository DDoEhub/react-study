리액트는
1. 페이스북에서 만든 자바스크립트 UI 라이브러리
2. html의 복잡한 코드를 사용자 정의 코드의 형태로 만들어 마치 자바의 변수처럼
가독성을 높이고 재사용과 관리를 용이하게 만들어 줄 수 있는 기능이다.
(자바의 변수: const 이름 = 내용
리액트: <코드1><코드2>....</코드2></코드1> = <사용자 정의 코드></사용자 정의 코드>
, 복잡한 내용을 짧게 여러번 사용 가능하고, 최초 작성지만 수정하면 적용된 모든 곳을 수정할 수 있다)

리액트설치
1. node js 다운 (설치 확인은 cmd에서 npm -v)
2. cmd에서 npm install -g create-react-app(설치 확인은 cmd에서 create-react-app -V)

개발환경설정
1. cmd에 cd (환경구축할 디렉터리 좌표, 드래그드랍가능) 입력 (좌표로 이동하는 동작)
2. create-react-app . 입력 (여기사 . 은 현재폴더를 지칭, 좌표의 디렉터리에서 리액트 개발에 필요한 파일들을 설치하는 과정)

리액트실행
1. 터미널을 열고 npm run start입력
2. 종료시 터미널에서 ctrl + c입력

최초 개발환경 구축 후에 public폴더에는 html이 src폴더에는 css, js등의 파일이 들어간다.



리액트로 코딩하기
컴포넌트와 props
class (컴포넌트명) extends Component {      // (컴포넌트명)은 꼭 대문자로 시작해야 한다.
    render() {      // class객체 안의 함수는 function을 굳이 쓰지 않고 생략할 수 있다.
        return (
            <html태그>        // 이 부분에서 html코드로 작성하기에 리액트 문법을 바닐라js로 가져가면 완성되지 않은 코드로 오류가 난다.
                <html태그>
                    {this.props.props명}
                    // props는 html의 속성과 비슷하게 사용할 수 있으며,
                    // 이렇게 설정한 props는 <컴포넌트명 props명="내용"></컴포넌트명>의 방식으로 다른 컴포넌트에서 사용할 수 있다.
                </html태그>
            </html태그>       // 컴포넌트 hTML코드의 최상단은 꼭 한개의 태그만 존재할 수 있다.
        );      // 꼭 새미콜론(;)으로 닫아준다.
    }
}

import React, { Component } from "react";
-react 라이브러리에 있는 Component를 사용할 수 있게 해주는 코드

export default (class명);
-(class명)을 다른 파일에서 import할 수 있게 만들어 주는 코드

*import: 수입하다
*export: 수출하다



리액트로 만든 앱 배포
- 파일을 배포(deploy)하기 위해선 개발환경과 다르게 파일을 관리해야 한다. 왜냐하면 개발환경에서 웹은 용량도 많고 그대로 배포하면 보안상의 문제도 생길 수 있기 때문이다.
npm run build를 터미널에 입력하면 build 폴더가 디렉토리에 생성되며, 그 안에는 공백이나 불필요한 정보를 가진 코드가 모조리 삭제되고 읽기 힘들정도로 빼곡한 html이 들어있다. create react app이 개발에 필요한 에러나 경고 메시지등을 모두 삭제하고 src에 있는 정보또한 html이 받을 수 있도록 처리한 후 내보낸 결과물이다.
실제로 앱을 서비스 할 때는 build안의 파일을 사용하며 웹 서버가 문서를 찾는 최상위 디렉터리에 build에 들어있는 파일을 사용해야 한다.

npm install -g serve나 npx serve로 serve를 사용할 수 있고,
npx serve -s build를 통해 웹 서버를 통해 빌드된 앱을 실행 시킬 수 있다.
